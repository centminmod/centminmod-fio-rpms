ARG BASE_IMAGE=almalinux:9
FROM ${BASE_IMAGE}

ARG EL_VERSION=9

# Handle different repo configurations based on EL version
RUN if [ "${EL_VERSION}" = "8" ]; then \
      dnf -y install dnf-plugins-core epel-release && \
      dnf -y config-manager --set-enabled powertools; \
    elif [ "${EL_VERSION}" = "9" ]; then \
      dnf -y install dnf-plugins-core epel-release && \
      dnf -y config-manager --set-enabled crb; \
    elif [ "${EL_VERSION}" = "10" ]; then \
      dnf -y install dnf-plugins-core && \
      dnf -y config-manager --set-enabled crb && \
      dnf -y install epel-release; \
    fi && \
    dnf -y install --allowerasing curl ca-certificates && \
    dnf clean all

# Install build tools and fio dependencies
RUN dnf -y groupinstall "Development Tools" && \
    dnf -y install rpm-build rpmdevtools redhat-rpm-config \
      libaio-devel zlib-devel numactl-devel librbd-devel \
      librdmacm-devel libnl3-devel libpmem-devel libpmemblk-devel \
      glusterfs-api-devel gtk2-devel python3-devel \
      systemd-devel openssl-devel libcurl-devel \
      libnbd-devel librbd1-devel git wget gnupg2 \
      python3-rpm-macros python-rpm-macros --skip-broken && \
    # Install platform-python-devel on EL8 for pathfix.py
    if [ "${EL_VERSION}" = "8" ]; then \
      dnf -y install platform-python-devel; \
    fi && \
    dnf clean all

# Create builder user and set up RPM tree
RUN useradd -m builder && \
    su - builder -c "rpmdev-setuptree"

# Switch to builder user and set working directory
USER builder
WORKDIR /home/builder/rpmbuild

# Create necessary directories
RUN mkdir -p SPECS SOURCES BUILD RPMS SRPMS

# Copy the fio.spec-3.39 file (expected to be in build context)
COPY spec/fio.spec-3.39 SPECS/fio.spec

# Download fio 3.40 sources
RUN cd SOURCES && \
    curl -L -o fio-3.40.tar.bz2 https://brick.kernel.dk/snaps/fio-3.40.tar.bz2 && \
    curl -L -o fio-3.40.tar.bz2.asc https://brick.kernel.dk/snaps/fio-3.40.tar.bz2.asc && \
    curl -L -o F7D358FB2971E0A6.asc https://git.kernel.org/pub/scm/docs/kernel/pgpkeys.git/plain/keys/F7D358FB2971E0A6.asc && \
    cd ..

# Update spec file for FIO 3.40
RUN cd SPECS && \
    # Update Version to 3.40
    sed -i 's/^Version:.*/Version:    3.40/' fio.spec && \
    # Update Release to reset it to 1
    sed -i 's/^Release:.*/Release:    1%{?dist}/' fio.spec && \
    # Update Source0 to point to the correct URL
    sed -i 's|^Source0:.*|Source0:    https://brick.kernel.dk/snaps/fio-%{version}.tar.bz2|' fio.spec && \
    # Remove patches that might not apply to 3.40
    sed -i '/^Patch[0-9]*:/d' fio.spec && \
    sed -i '/^%patch[0-9]*/d' fio.spec && \
    # For EL8, fix the pathfix.py path
    if [ "${EL_VERSION}" = "8" ]; then \
      # On EL8, pathfix.py is at /usr/bin/pathfix.py, not /usr/lib/rpm/redhat/pathfix.py
      sed -i 's|%{_rpmconfigdir}/redhat/pathfix.py|/usr/bin/pathfix.py|g' fio.spec; \
    fi && \
    # For EL10, disable RBD, RADOS, and PMEM support due to missing packages or packaging issues
    if [ "${EL_VERSION}" = "10" ]; then \
      sed -i 's/%bcond rbd 1/%bcond_without rbd/' fio.spec && \
      sed -i 's/%bcond rados 1/%bcond_without rados/' fio.spec && \
      sed -i 's/%bcond pmem %{undefined rhel}/%bcond_without pmem/' fio.spec && \
      sed -i 's/%bcond pmem 1/%bcond_without pmem/' fio.spec; \
    fi && \
    # Add changelog entry
    sed -i '/^%changelog/a\* '"$(date +"%a %b %d %Y")"' Builder <builder@local> - 3.40-1\
- Updated to FIO 3.40 using fio.spec-3.39 as base\
- Removed original patches from spec\
- Built from upstream FIO 3.40 release\
- Fixed pathfix.py path on EL8\
- Disabled RBD/RADOS/PMEM support on EL10 due to missing packages or packaging issues' fio.spec